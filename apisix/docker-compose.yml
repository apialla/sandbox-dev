version: "3"

services:

  # !!! for capturing http logs uncomment when needed
  # agent.apisix:
  #   image: logmink/agent:0.9
  #   container_name: apisix
  #   network_mode: "service:apisix"
  #   depends_on:
  #     - apisix
  #   environment:
  #     PORT: 32000
  #     LOGMINK_HUB_URL: http://logmink.hub
  #     mongoUrl: mongodb://logmink.hub:27017/logdb-prod
  #   entrypoint: ["node", "agent.js"]

  apisix.saqal:
    image: apache/apisix:${APISIX_IMAGE_TAG:-3.11.0-debian}
    restart: always
    volumes:
      - ./apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    depends_on:
      - etcd
    ports:
      - "9180:9180/tcp"
      - "9080:9080/tcp"
      - "9091:9091/tcp"
      - "9443:9443/tcp"
      - "9092:9092/tcp"
    networks:
      - saqal_network

  etcd:
    image: bitnami/etcd:3.5.11
    restart: always
    # volumes:
      # - etcd_data:/bitnami/etcd
    environment:
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    ports:
      - "2379:2379/tcp"
    networks:
      - saqal_network

  prometheus.saqal:
    image: prom/prometheus:v2.25.0
    restart: always
    volumes:
      - ./prometheus_conf/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - saqal_network

  grafana.saqal:
    image: grafana/grafana:7.3.7
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - "./grafana_conf/provisioning:/etc/grafana/provisioning"
      - "./grafana_conf/dashboards:/var/lib/grafana/dashboards"
      - "./grafana_conf/config/grafana.ini:/etc/grafana/grafana.ini"
    networks:
      - saqal_network

networks:
  saqal_network:
    external: true
